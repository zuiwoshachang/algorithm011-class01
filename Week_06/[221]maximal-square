class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if (matrix.empty()) return 0;
        int rows = matrix.size();
        int cnts = matrix[0].size();
        vector<vector<int>> dp;
        dp.resize(rows, vector<int>(cnts));
        int maxV = 0;
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cnts; ++j) {
                if (matrix[i][j] == '0') {
                    dp[i][j] = 0;
                    continue;
                }

                if (i == 0 || j == 0) {
                    dp[i][j] = 1;
                    maxV = maxV < 1 ? 1 : maxV;
                    continue;
                }

                dp[i][j] = min(dp[i-1][j], min(dp[i][j-1], dp[i-1][j-1])) + 1;
                maxV = maxV < dp[i][j] ? dp[i][j] : maxV;
            }
        }

        return maxV * maxV;
    }
};