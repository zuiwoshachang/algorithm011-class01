class Solution {
public:
    long long numDistinct(string s, string t) {    
        const int t_len = t.length();
        const int s_len = s.length();    
        std::vector<std::vector<long long>> dp(t_len + 1, std::vector<long long>(s_len + 1, 0));

        for (int j = 0; j <= s_len; ++j) dp[0][j] = 1;

        for (int i = 1; i <= t_len; ++i) {
            for (int j = 1; j <= s_len; ++j) {
                if (t[i-1] == s[j-1]) dp[i][j] = dp[i-1][j-1] + dp[i][j-1];
                else
                    dp[i][j] = dp[i][j-1];
            }
        }

        return dp[t_len][s_len];
    }
};